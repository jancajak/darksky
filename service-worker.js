"use strict";var precacheConfig=[["/darksky/index.html","3f2196b76ad926e7e82520cd2e2121fa"],["/darksky/static/css/main.f06bb492.css","f35c251ed5c754aa6f3cea1eb9572b32"],["/darksky/static/js/main.c25e6234.js","7d907ab010a27b3750494869d767c470"],["/darksky/static/media/clear-day.4b9869a6.svg","4b9869a6859846e524d1985de86894f7"],["/darksky/static/media/clear-night.f86c33c4.svg","f86c33c4ccc36dbeb826cbdb5f50594b"],["/darksky/static/media/cloudy.2d0410c5.svg","2d0410c52e9fe2b3e0fb905f129ad19a"],["/darksky/static/media/error.19b10c5f.svg","19b10c5f271b055225c7ee56382d71d4"],["/darksky/static/media/fog.c356784f.svg","c356784f45aaa40ef57ed9031101d912"],["/darksky/static/media/hail.a4598f76.svg","a4598f7699558fa2a8201690bd673fc4"],["/darksky/static/media/partly-cloudy-day.3237f7da.svg","3237f7da426fbedf7faa6782f8c4c455"],["/darksky/static/media/partly-cloudy-night.b75d90bd.svg","b75d90bdda7e56b0435b10a36d87392e"],["/darksky/static/media/perc-rain.5ac590b7.svg","5ac590b7c142c7d4205c502edecf748c"],["/darksky/static/media/perc-snow.10a793eb.svg","10a793ebc6338f2b279727fd2de81308"],["/darksky/static/media/poweredby.80edb981.png","80edb98169db765613f77c238f680023"],["/darksky/static/media/rain.e13be320.svg","e13be320202dc94ef0d3696c1f508d24"],["/darksky/static/media/sleet.8291f353.svg","8291f3539cf9ca67ea3680a1a4a720f5"],["/darksky/static/media/snow.1a2bbf7d.svg","1a2bbf7db1720db83324bbf482344ec4"],["/darksky/static/media/thunderstorm.22fff390.svg","22fff390b0fcd9c46390fe913b23895d"],["/darksky/static/media/tornado.c5b4a7b7.svg","c5b4a7b731d354a42573365b05504f23"],["/darksky/static/media/wind.56e49cd3.svg","56e49cd3e26af14007a5642cd119e0aa"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,a){var t=new URL(e);return"/"===t.pathname.slice(-1)&&(t.pathname+=a),t.toString()},cleanResponse=function(a){return a.redirected?("body"in a?Promise.resolve(a.body):a.blob()).then(function(e){return new Response(e,{headers:a.headers,status:a.status,statusText:a.statusText})}):Promise.resolve(a)},createCacheKey=function(e,a,t,r){var n=new URL(e);return r&&n.pathname.match(r)||(n.search+=(n.search?"&":"")+encodeURIComponent(a)+"="+encodeURIComponent(t)),n.toString()},isPathWhitelisted=function(e,a){if(0===e.length)return!0;var t=new URL(a).pathname;return e.some(function(e){return t.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(a){return t.every(function(e){return!e.test(a[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var a=e[0],t=e[1],r=new URL(a,self.location),n=createCacheKey(r,hashParamName,t,/\.\w{8}\./);return[r.toString(),n]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(r){return setOfCachedUrls(r).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var e=new Request(a,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+a+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return r.put(a,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(a){return a.keys().then(function(e){return Promise.all(e.map(function(e){if(!t.has(e.url))return a.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(a){if("GET"===a.request.method){var e,t=stripIgnoredUrlParameters(a.request.url,ignoreUrlParametersMatching),r="index.html";(e=urlsToCacheKeys.has(t))||(t=addDirectoryIndex(t,r),e=urlsToCacheKeys.has(t));var n="/darksky/index.html";!e&&"navigate"===a.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],a.request.url)&&(t=new URL(n,self.location).toString(),e=urlsToCacheKeys.has(t)),e&&a.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(t)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',a.request.url,e),fetch(a.request)}))}});